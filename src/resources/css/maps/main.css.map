{"version":3,"sources":["_vars.scss","main.css","main.scss","_main-grid.scss","abstracts/mixins/_grid.scss","_events.scss","_media-section.scss"],"names":[],"mappings":"AAkEA;EACI,6BAA6B;EAC7B,4DAEuD;ACnE3D;;ADsEA;EACI,6BAA6B;EAC7B,iEAE4D;ACrEhE;;ADwEA;;CCpEC;ACND;EACI,sBAAsB;ADQ1B;;ACLA;EACI,YAAY;EACZ,aAAa;EACb,SAAS;EACT,UAAU;EACV,6BAA6B;ADQjC;;AEnBA;EACI,WAJe;EAKf,mBHmDQ;EGjDR,mDAAiD;EAKjD,yBAAyB;EACzB,aAAa;EACb,eAAe;AFiBnB;;AE5BA;EAcQ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,YAAY;EACZ,WAAW;EACX,cAAc;AFkBtB;;AErCA;EAuBY,mBAAmB;EACnB,WAAW;EAEX,cAAc;AFiB1B;;AE3CA;EA8BY,iBAAiB;EACjB,gBAAgB;EAChB,yDAAyD;AFiBrE;;AEjDA;EAqCQ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,WAAW;EACX,YAAY;EACZ,cAAc;EAEd,yDAAyD;AFejE;;AE3DA;EA+CY,6BAA6B;EAG7B,eAAe;AFc3B;;AETA;EACI,aAAa;EACb,8BAA8B;EAC9B,yCAAqE;EACrE,WAAW;EACX,YAAY;EACZ,mBHTQ;EGUR,cHlCQ;AC8CZ;;AEVI;EC+BI,kBAAwC;EACxC,eAAqC;ED9BrC,mBHdI;EGeJ,WAAW;AFcnB;;AEXI;ECyBI,kBAAwC;EACxC,eAAqC;EDxBrC,WAAW;AFenB;;AEbQ;EAGI,yBAAyC;AFcrD;;AEJA;EACI,WA3Fe;EA4Ff,mBHpCQ;EGqCR,aAAa;AFOjB;;AEVA;EAKQ,eAAe;EACf,yDAAyD;EACzD,6BAA6B;EAG7B,eAAe;AFOvB;;AI5GA;EACE,aAAa;AJ+Gf;;AIhHA;EAGI,aAAa;EACb,8BAA8B;EAC9B,8BAAyC;EACzC,QAAO;AJiHX;;AIvHA;EAQM,gBAAgB;EAChB,eAAe;EACf,yBL+CM;ACoEZ;;AI7HA;EAaM,aAAa;EACb,8BAA8B;AJoHpC;;AIlIA;EAiBQ,iBAAiB;AJqHzB;;AItIA;EAoBQ,aLEK;ACoHb;;AI1IA;EAuBQ,aLFK;ACyHb;;AI9IA;EA0BQ,aLHK;AC2Hb;;AIlJA;EA6BQ,UAAS;AJyHjB;;AItJA;EAgCQ,aLZK;ACsIb;;AK1JA;EACI,YAAY;EACZ,WAAW;EAEX,aAAa;EACb,YAAY;EACZ,6BAA6B;AL4JjC;;AKlKA;EASQ,gBAAgB;EAChB,YAAY;AL6JpB;;AKvKA;EAeQ,eAAe;AL4JvB;;AK3KA;EAmBQ,YAAY;AL4JpB;;AK/KA;EAsBY,WAAW;EACX,YAAY;AL6JxB;;AKpLA;EA4BQ,gBAAgB;EAChB,aAAa;EACb,oCAAoC;EAEpC,mBNyBI;EMxBJ,YAAY;AL2JpB;;AK5LA;EAoCY,eAAe;AL4J3B;;AKhMA;EAwCY,WAAW;EACX,eAAe;EACf,cAAc;AL4J1B","file":"../main.css","sourcesContent":["// /**************************************************\r\n// Generel variables for framework\r\n// ***************************************************/\r\n\r\n// Getting fonts\r\n\r\n// Imports are now handled by font-magician\r\n// @import url('https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700');\r\n\r\n\r\n\r\n//navigation\r\n// $nav-height: px2rem(100px);\r\n\r\n$gridcontainer-exists: true;\r\n\r\n$debug: false;\r\n\r\n// Brand colors.\r\n$color-brand: (\r\n  gt: #5979C5,\r\n  mg: #901F93,\r\n  dm: #79A92C,\r\n  wu: #DC383D\r\n);\r\n\r\n@function color-brand($key) {\r\n  @return map-get($color-brand, $key);\r\n}\r\n\r\n// Light colors.\r\n$color-light: (\r\n  1: #E0E0E0,\r\n  2: #F5F5F5,\r\n  3: #FAFAFA,\r\n  4: #FFFFFF\r\n);\r\n\r\n@function color-light($key: 3) {\r\n  @return map-get($color-light, $key);\r\n}\r\n\r\n// Dark colors.\r\n$color-dark: (\r\n  1: #000000,\r\n  2: #212121,\r\n  3: #303030,\r\n  4: #424242\r\n);\r\n\r\n@function color-dark($key: 3) {\r\n  @return map-get($color-dark, $key);\r\n}\r\n\r\n// Color theme.\r\n$color-theme: (\r\n  1: #191A1D,\r\n  2: #202125,\r\n  3: #32333B,\r\n  4: #0EBEFF\r\n);\r\n\r\n@function color-theme($key) {\r\n  @return map-get($color-theme, $key);\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Frutiger Light';\r\n    src:    \r\n    // url('myfont.woff2') format('woff2'),\r\n    url('../fonts/FrutigerLTStd-Light.woff') format('woff');\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Frutiger Black';\r\n    src:    \r\n    // url('myfont.woff2') format('woff2'),\r\n    url('../fonts/FrutigerLTStd-UltraBlack.woff') format('woff');\r\n}\r\n\r\n/*\r\nRoot vars. STANDARD FONTS AND COLORS \r\n*/\r\n// :root {\r\n//     // /* FONTS AND FALLBACKS */\r\n    \r\n    \r\n//     // /* Calculation */\r\n//     // --respaonsive: calc((var(--min-font) * 1px) + (var(--max-font) - var(--min-font)) * ((100vw - 100px) / (1200 - 100))); /* Ranges from 421px to 1199px */\r\n// }\r\n","@font-face {\n  font-family: 'Frutiger Light';\n  src: url(\"../fonts/FrutigerLTStd-Light.woff\") format(\"woff\");\n}\n\n@font-face {\n  font-family: 'Frutiger Black';\n  src: url(\"../fonts/FrutigerLTStd-UltraBlack.woff\") format(\"woff\");\n}\n\n/*\r\nRoot vars. STANDARD FONTS AND COLORS \r\n*/\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n\nhtml, body {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  font-family: 'Frutiger Light';\n}\n\n.main-header {\n  height: 9vh;\n  background: #202125;\n  filter: drop-shadow(0px 4px 2px rgba(0, 0, 0, 0.5));\n  grid-column: 1 / span all;\n  display: flex;\n  padding: 0 1rem;\n}\n\n.main-header .left {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n  width: 100%;\n  padding: 0.5vw;\n}\n\n.main-header .left .logo {\n  object-fit: contain;\n  height: 90%;\n  display: block;\n}\n\n.main-header .left .time-date {\n  text-align: right;\n  line-height: 1.5;\n  filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 0.5));\n}\n\n.main-header .right {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  padding: 0.5vw;\n  filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 0.5));\n}\n\n.main-header .right h2 {\n  font-family: 'Frutiger Light';\n  font-size: 2rem;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 9vh calc(100vh - 9vh);\n  width: 100%;\n  height: 100%;\n  background: #191A1D;\n  color: #E0E0E0;\n}\n\n.container__left {\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  background: #191A1D;\n  width: 100%;\n}\n\n.container__right {\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  width: 100%;\n}\n\n.container__right--top {\n  height: calc(50% - 4.5vh);\n}\n\n.section-header {\n  height: 9vh;\n  background: #202125;\n  display: flex;\n}\n\n.section-header h2 {\n  padding: 0 1rem;\n  filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 0.5));\n  font-family: 'Frutiger Light';\n  font-size: 2rem;\n}\n\n.container__left {\n  padding: 10px;\n}\n\n.container__left > section {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 4.5vh auto;\n  gap: 5px;\n}\n\n.container__left > section header {\n  grid-column: 1/3;\n  font-size: 24px;\n  background-color: #202125;\n}\n\n.container__left > section section {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.container__left > section section svg text {\n  font-size: 0.7rem;\n}\n\n.container__left > section section svg:nth-of-type(5n+1) > g > path {\n  fill: #79A92C;\n}\n\n.container__left > section section svg:nth-of-type(5n+2) > g > path {\n  fill: #901F93;\n}\n\n.container__left > section section svg:nth-of-type(5n+3) > g > path {\n  fill: #DC383D;\n}\n\n.container__left > section section svg:nth-of-type(5n+0) > g > path {\n  fill: #aaa;\n}\n\n.container__left > section section svg:nth-of-type(5n+4) > g > path {\n  fill: #5979C5;\n}\n\n.media-container {\n  height: 100%;\n  width: 50vw;\n  display: flex;\n  padding: 1vw;\n  justify-content: space-around;\n}\n\n.media-container .video {\n  min-height: 100%;\n  height: 100%;\n}\n\n.media-container img {\n  max-width: 18vw;\n}\n\n.media-container .iframe-container {\n  width: 200vw;\n}\n\n.media-container .iframe-container iframe {\n  width: 100%;\n  height: 100%;\n}\n\n.media-container .description {\n  margin-left: 1vw;\n  display: grid;\n  grid-auto-rows: auto max-content 1fr;\n  background: #202125;\n  padding: 1vw;\n}\n\n.media-container .description p {\n  max-width: 100%;\n}\n\n.media-container .description .qr-code {\n  height: 3vw;\n  max-width: 100%;\n  margin: 0 auto;\n}\n","@import 'vendor/include-media';\n@import 'vars';\n@import 'abstracts/mixins/grid';\n// @import 'abstracts/functions/'\n// @import 'vendor/normalize8-not-sass';\n\n*, *::before, *::after {\n    box-sizing: border-box;\n}\n\nhtml, body {\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    font-family: 'Frutiger Light';\n    // overflow: hidden;\n}\n\n\n\n@import 'main-grid';\n\n@import 'events';\n\n@import 'media-section';\n\n","\n$header-height: 9vh;\n\n\n.main-header {\n    height: $header-height;\n    background: color-theme(2);\n    // box-shadow: 0px 4px 10px rgba(0,0,0, 0.5);\n    filter: drop-shadow(0px 4px 2px rgba(0,0,0, 0.5));\n    // @include igi(\"1 / span all\", \"1 / 2\");\n    // @include isgc(\"1 / span all\", \"1 / 2\", \"50vw 50vw\");\n    // display: grid;\n    // grid-template-columns: 1fr 1fr;\n    grid-column: 1 / span all;\n    display: flex;\n    padding: 0 1rem;\n\n    .left {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        height: 100%;\n        width: 100%;\n        padding: 0.5vw;\n        // filter: drop-shadow(0px 0px 10px rgba(255, 255, 255, 0.5));\n\n        .logo {\n            object-fit: contain;\n            height: 90%;\n            // margin: 0 1vh;\n            display: block;\n        }\n\n        .time-date {\n            text-align: right;\n            line-height: 1.5;\n            filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 0.5));\n        }\n    }\n\n    .right {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 100%;\n        padding: 0.5vw;\n        \n        filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 0.5));\n\n        h2 {\n            font-family: 'Frutiger Light';\n            // font-family: 'Frutiger Black';\n            // font-weight: 600;\n            font-size: 2rem;\n        }\n    }\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: #{$header-height} calc(100vh - #{$header-height});\n    width: 100%;\n    height: 100%;\n    background: color-theme(1);\n    color: color-light(1);\n    \n    &__left {\n        @include igi(\"1 / 2\", \"2 / 3\");\n        background: color-theme(1);\n        width: 100%;\n    }\n\n    &__right {\n        @include igi(\"2 / 3\", \"2 / 3\");\n        width: 100%;\n\n        &--top {\n            // background: #fff;\n            // height: 50%;\n            height: calc(50% - #{$header-height / 2});\n        }\n        \n        &--bottom {\n            // height: 50%;\n\n        }\n    }\n}\n\n.section-header {\n    height: $header-height;\n    background: color-theme(2);\n    display: flex;\n    h2 {\n        padding: 0 1rem;\n        filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 0.5));\n        font-family: 'Frutiger Light';\n        // font-family: 'Frutiger Black';\n        // font-weight: 600;\n        font-size: 2rem;\n    }\n}\n\n// @for $i from 1 through 6 {\n//     h#{7- $i}{\n//         // font-size: 3 - (($i * $i) / 10) + rem;\n//         font-size: ($i * $i + 5) / 40 + rem;\n//     }\n// }\n","// /**************************************************\r\n// Grid mixins \r\n// v.1.7\r\n// ***************************************************/\r\n// SCSS CSS Grid \r\n\r\n\r\n////\r\n/// This is a poster comment.\r\n/// It will apply annotations to all items from file.\r\n/// @author Michael Koch\r\n/// @group Grid\r\n////\r\n\r\n\r\n/// Default variable to write/read check if root\r\n/// grid container exist.\r\n/// Feel very free to override in other files.\r\n/// @author Michael Koch\r\n$gridcontainer-exists: false !default;\r\n\r\n\r\n/// Mixin to define a grid container\r\n/// @author Michael Koch\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n@mixin is-grid-container($col-spec, $row-spec: null) {\r\n    \r\n    display: grid;\r\n    @if $row-spec==null {\r\n        grid-template-columns: unquote(inspect($col-spec));\r\n    }@else {\r\n        grid-template-columns: unquote(inspect($col-spec));\r\n        grid-template-rows: unquote(inspect($row-spec));\r\n    }\r\n    \r\n    // Check if a root grid container exist\r\n    @if $gridcontainer-exists == false {\r\n        // Set up box model for root grid container\r\n        box-sizing: border-box;\r\n\r\n        // Make all child elements inherit the box model\r\n        & *,\r\n        *::before,\r\n        *::after {\r\n            box-sizing: border-box;\r\n        }\r\n        $gridcontainer-exists: true !global;\r\n    }\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a grid container\r\n/// @author Michael Koch\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n/// @alias is-grid-container\r\n@mixin igc($col-spec, $row-spec: null) {\r\n    @include is-grid-container($col-spec, $row-spec);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n@mixin make-grid-container($selector, $col-spec, $row-spec: null) {\r\n    @if type-of($selector) !=string {\r\n        @warn '1st parameter should be a selector name (e.g: .container), and therefore a string.';\r\n    }\r\n\r\n    #{$selector} {\r\n        @include is-grid-container($col-spec, $row-spec) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n/// @alias make-grid-container\r\n@mixin mgc($selector, $col-spec, $row-spec: null) {\r\n    @include make-grid-container($selector, $col-spec, $row-spec) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Mixin to define a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n@mixin is-grid-item($col-span, $row-span: null) {\r\n    @if $row-span==null {\r\n        grid-column: unquote(inspect($col-span));\r\n    } @else {\r\n        grid-column: unquote(inspect($col-span));\r\n        grid-row: unquote(inspect($row-span));\r\n    }\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n/// @alias is-grid-item\r\n@mixin igi($col-span, $row-span: null) {\r\n    @include is-grid-item($col-span, $row-span);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a grid item\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n@mixin make-grid-itam($selector, $col-span, $row-span: null) {\r\n    @if type-of($selector) !=string {\r\n        @warn '1st parameter should be a selector name (e.g: .container), and therefore a string.';\r\n    }\r\n\r\n    #{$selector} {\r\n        @include is-grid-item($col-span, $row-span) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n/// @alias make-grid-itam\r\n@mixin mgi($selector, $col-span, $row-span: null) {\r\n    @include make-grid-itam($selector, $col-span, $row-span) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Mixin to define a sub grid container\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n@mixin is-sub-grid-container($col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include is-grid-container($col-spec, $row-spec);\r\n    @include is-grid-item($col-span, $row-span);\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a sub grid container\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n/// @alias is-sub-grid-container\r\n@mixin isgc($col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include is-sub-grid-container($col-span, $row-span, $col-spec, $row-spec);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a sub grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n@mixin make-sub-grid-container($selector, $col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include make-grid-itam($selector, $col-span, $row-span) {\r\n        @include is-grid-container($col-spec, $row-spec) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a sub grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n/// @alias make-sub-grid-container\r\n@mixin msgc($selector, $col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include make-sub-grid-container($selector, $col-span, $row-span, $col-spec, $row-spec) {\r\n        @content;\r\n    }\r\n}\r\n\r\n$grid-index: (  \r\n    2tm: 899, \r\n    2tl: 1, \r\n    dropdown: 210,\r\n    navigation: 205,\r\n    main-header: 200,\r\n    gridcontainer: 90,\r\n    teaser: 60,\r\n    info-text: 50, \r\n    bg-image: 40, \r\n    test3: 'span 4', \r\n    test: '1 / 13', \r\n    test1: '1 / 55', \r\n    test2: '1 / 14'\r\n) !default;\r\n\r\n@function get-grid($key) {\r\n    // @return unquote(map-get($grid-index, $key));\r\n    @if not map-has-key($grid-index, $key) {\r\n        // @warn \"Key `#{$key}` not found. Keys are: '#{map-keys($map: $z-index)}\"; // My compiler doesn't care for warnings, throw error.\r\n        @error 'Key `#{$key}` not found. Keys are: '#{map-keys($map: $grid-index)}'';\r\n    }\r\n    @return unquote(inspect(map-get($grid-index, $key)));\r\n}\r\n\r\n@mixin get-grid($key) {\r\n    grid-column: get-grid($key);\r\n}\r\n",".container__left {\n  padding: 10px;\n  &>section{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: $header-height/2 auto;\n    gap:5px;\n    header{\n      grid-column: 1/3;\n      font-size: 24px;\n      background-color: color-theme(2);\n    }\n    section{\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n\n      svg text{\n        font-size: 0.7rem;\n      }\n      svg:nth-of-type(5n+1) >g>path{\n        fill:color-brand(dm);\n      }\n      svg:nth-of-type(5n+2) >g>path{\n        fill:color-brand(mg);\n      }\n      svg:nth-of-type(5n+3) >g>path{\n        fill:color-brand(wu);\n      }\n      svg:nth-of-type(5n+0) >g>path{\n        fill:#aaa;\n      }\n      svg:nth-of-type(5n+4) >g>path{\n        fill:color-brand(gt);\n      }\n    }\n  }\n}\n",".media-container {\n    height: 100%;\n    width: 50vw;\n    // background: #e3e3e3;\n    display: flex;\n    padding: 1vw;\n    justify-content: space-around;\n\n    .video {\n        min-height: 100%;\n        height: 100%;\n        // background: #000;\n    }\n\n    img {\n        max-width: 18vw;\n    }\n    \n    .iframe-container {\n        width: 200vw;\n\n        iframe {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    .description {\n        margin-left: 1vw;\n        display: grid;\n        grid-auto-rows: auto max-content 1fr;\n        // grid-auto-rows: auto auto auto;\n        background: color-theme(2);\n        padding: 1vw;\n\n        p {\n            max-width: 100%;\n        }\n\n        .qr-code {\n            height: 3vw;\n            max-width: 100%;\n            margin: 0 auto;\n        }\n    }\n}   "]}